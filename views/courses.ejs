<!DOCTYPE html>
<html>

<head>
    <title>LEARN! | Course</title>
    <link rel="stylesheet" type="text/css" href="courses.css">
</head>

<body>
    <nav>
        <div class="Navigation">
            <div>
                <h1 class="navbar-brand">LEARN.INC</h1>
            </div>

            <div class="navbar-btn">
                <div>
                    <h1 class="btn"><a href="/dashboard">Dashboard</a></h1>
                </div>

            </div>
        </div>
    </nav>

    <!-- ======================================================================================================================================================
 -->

    <div id="viewport">
        <!-- Sidebar -->
        <div id="sidebar">
            <ul class="nav">

                <li>
                    <button class="tablinks" onclick="openMaterial(event, 'HTML')">≡ Task1: HTML</button>
                </li>

                <li>
                    <button class="tablinks" onclick="openMaterial(event, 'CSS')">≡ Task2: CSS</button>
                </li>

                <li>
                    <button class="tablinks" onclick="openMaterial(event, 'JAVASCRIPT')">≡ Task3: JavaScript</button>
                </li>

                <li>
                    <button class="tablinks" onclick="openMaterial(event, 'NODE')">≡ Task4: NODE.js</button>
                </li>

                <li>
                    <button class="tablinks" onclick="openMaterial(event, 'MONGODB')">≡ Task5: MongoDB</button>
                </li>

            </ul>
        </div>

        <!-- Content -->
        <div id="content">
            <br>
            <div>
                <div class="course-material">

                    <div id="HTML" class="tabcontent container" style="display: block;">
                        <h1>HTML</h1>
                        <p>The HyperText Markup Language, or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such
                            as JavaScript. Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included
                            cues for the appearance of the document. HTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a
                            means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such
                            as &lt;/img&gt; &lt;/div&gt; and &lt;a&gt; &lt;/a&gt; directly introduce content into the page. Some tags are as follows.

                            <ul style="margin-left: 30px; margin-bottom: 20px;">

                                <li>&lt; div &gt; &lt; /div &gt;</li>
                                <li>&lt; p &gt; &lt; /p &gt;</li>
                                <li>&lt; a &gt; &lt; /a &gt;</li>
                            </ul>

                            <iframe style="justify-content: center;" width="560" height="300" src="https://www.youtube.com/embed/MDLn5-zSQQI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                allowfullscreen></iframe>

                    </div>

                    <div id="CSS" class="tabcontent container">
                        <h1>CSS</h1>
                        <p>CSS is designed to enable the separation of presentation and content, including layout, colors, and fonts.[3] This separation can improve content accessibility, provide more flexibility and control in the specification of presentation
                            characteristics, enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file which reduces complexity and repetition in the structural content as well as enabling the .css file to be
                            cached to improve the page load speed between the pages that share the file and its formatting.</p>
                        <br><br>
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/1PnVor36_40" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                    </div>

                    <div id="JAVASCRIPT" class="tabcontent container">
                        <h1>JavaScript</h1>
                        <p>Alongside HTML and CSS, JavaScript is one of the core technologies of the World Wide Web.[11] Over 97% of websites use it client-side for web page behavior,[12] often incorporating third-party libraries.[13] Most web browsers have
                            a dedicated JavaScript engine to execute the code on the user's device. As a multi-paradigm language, JavaScript supports event-driven, functional, and imperative programming styles. It has application programming interfaces
                            (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM). </p>
                        <br><br>
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/PkZNo7MFNFg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                    </div>

                    <div id="NODE" class="tabcontent container">
                        <h1>Node.JS</h1>
                        <p>Node.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser. Node.js lets developers use JavaScript to write command line tools
                            and for server-side scripting—running scripts server-side to produce dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a "JavaScript everywhere" paradigm,[6] unifying
                            web-application development around a single programming language, rather than different languages for server-side and client-side scripts. </p>

                        <br><br>
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/TlB_eWDSMt4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                    </div>

                    <div id="MONGODB" class="tabcontent container">
                        <h1>Mongo DB</h1>
                        <p>MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing. MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program,
                            MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License. </p>
                        <br><br>
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/VELru-FCWDM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                    </div>



                </div>
            </div>
        </div>


        <script type="text/javascript" src="courses.js"></script>

        <script>
            function openMaterial(evt, materialName) {
                // Declare all variables
                var i, tabcontent, tablinks;
                // Get all elements with class="tabcontent" and hide them
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                // Get all elements with class="tablinks" and remove the class "active"
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                // Show the current tab, and add an "active" class to the link that opened the tab
                document.getElementById(materialName).style.display = "block";
                evt.currentTarget.className += " active";
            }
        </script>

</body>

</html>